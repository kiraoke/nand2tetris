// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux4Way.hdl
/**
 * 4-way demultiplexor:
 * [a, b, c, d] = [in, 0, 0, 0] if sel = 00
 *                [0, in, 0, 0] if sel = 01
 *                [0, 0, in, 0] if sel = 10
 *                [0, 0, 0, in] if sel = 11
 */
CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    //// Replace this comment with your code.
    Not(in=sel[0] , out=notsel0 );
    Not(in=sel[1] , out=notsel1 );
    
    And(a=notsel0 , b=notsel1 , out=none );
    And(a=sel[0], b=notsel1, out=notsel1andsel0);
    And(a=sel[1], b=notsel0, out=notsel0sel1);
    And(a=sel[0] , b=sel[1] , out=both );

    And(a=none , b=in , out=a );
    And(a=notsel1andsel0 , b=in , out=b );
    And(a=notsel0sel1 , b=in , out=c );
    And(a=both , b=in , out=d );
}

// ALT APPROACH
CHIP DMux4Way {


    IN in, sel[2];

    OUT a, b, c, d;

    PARTS:
    DMux(in=in, sel=sel[1], a=c1, b=c2);
    DMux(in=c1, sel=sel[0], a=a, b=b);
    DMux(in=c2, sel=sel[0], a=c, b=d);
}
